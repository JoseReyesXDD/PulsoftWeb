# Generated by Django 5.2.3 on 2025-06-25 23:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Caregiver',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'caregiver'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='caregiver_profile', serialize=False, to='api.customuser')),
            ],
            options={
                'verbose_name': 'Cuidador',
                'verbose_name_plural': 'Cuidadores',
            },
        ),
        migrations.CreateModel(
            name='ClinicalNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_text', models.TextField(help_text='Contenido de la nota clínica o descripción del episodio.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación de la nota.')),
            ],
            options={
                'verbose_name': 'Nota Clínica',
                'verbose_name_plural': 'Notas Clínicas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'patient'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='patient_profile', serialize=False, to='api.customuser')),
                ('caregiver_link_token', models.CharField(blank=True, help_text='Token único que un paciente proporciona a los cuidadores para vincularse.', max_length=36, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_type',
            field=models.CharField(choices=[('patient', 'Paciente'), ('caregiver', 'Cuidador')], default='patient', help_text='Define si el usuario es un paciente o un cuidador.', max_length=10),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='uid',
            field=models.CharField(blank=True, help_text='UID único del usuario en Firebase Authentication.', max_length=128, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='AnxietyAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.TextField(help_text='Diagnóstico o resumen del análisis generado por la IA.')),
                ('suggestions', models.TextField(help_text='Sugerencias o recomendaciones generadas por la IA.')),
                ('analyzed_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se realizó el análisis.')),
                ('clinical_note', models.OneToOneField(help_text='La nota clínica a la que corresponde este análisis.', on_delete=django.db.models.deletion.CASCADE, related_name='ai_analysis', to='api.clinicalnote')),
            ],
            options={
                'verbose_name': 'Análisis de Ansiedad (IA)',
                'verbose_name_plural': 'Análisis de Ansiedad (IA)',
                'ordering': ['-analyzed_at'],
            },
        ),
        migrations.AddField(
            model_name='clinicalnote',
            name='patient',
            field=models.ForeignKey(help_text='El paciente al que pertenece esta nota.', on_delete=django.db.models.deletion.CASCADE, related_name='clinical_notes', to='api.patient'),
        ),
        migrations.CreateModel(
            name='CaregiverPatientLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se estableció el enlace.')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el enlace entre el cuidador y el paciente está activo.')),
                ('caregiver', models.ForeignKey(help_text='El cuidador que establece el enlace.', on_delete=django.db.models.deletion.CASCADE, related_name='caregiver_links', to='api.caregiver')),
                ('patient', models.ForeignKey(help_text='El paciente con el que se establece el enlace.', on_delete=django.db.models.deletion.CASCADE, related_name='patient_links', to='api.patient')),
            ],
            options={
                'verbose_name': 'Enlace Cuidador-Paciente',
                'verbose_name_plural': 'Enlaces Cuidador-Paciente',
                'unique_together': {('caregiver', 'patient')},
            },
        ),
        migrations.AddField(
            model_name='caregiver',
            name='patients',
            field=models.ManyToManyField(help_text='Los pacientes a los que este cuidador está vinculado.', related_name='caregivers', through='api.CaregiverPatientLink', to='api.patient'),
        ),
    ]
